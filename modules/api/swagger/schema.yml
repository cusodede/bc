openapi: 3.0.0
info:
  title: Product Platform API
  description: API модуль для витрин
  version: '1.0'
servers:
  - url: /api
paths:
  /auth/token:
    get:
      tags:
        - Auth
      summary: Запрос на получение токенов
      responses:
        '200':
          description: Токены успешно созданы
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenData'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
        - Basic: [ ]
    post:
      tags:
        - Auth
      summary: Запрос на перевыпуск токенов
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - grant_type
                - refresh_token
              properties:
                grant_type:
                  type: string
                  enum:
                    - refresh_token
                refresh_token:
                  type: string
      responses:
        '200':
          description: Токены обновлены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenData'
        '401':
          description: Your request was made with invalid credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Basic: [ ]
  /products/list:
    get:
      tags:
        - Products
      summary: Запрос на получение списка продуктов
      parameters:
        - name: phone
          in: query
          required: true
          schema:
            type: string
            pattern: '^7\d{10}$'
      responses:
        '200':
          description: Массив продуктов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '404':
          description: Ошибка определения абонента по номеру телефона
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Bearer: [ ]
  /products/one:
    get:
      tags:
        - Products
      summary: Запрос на получение информации о конкретном продукте
      parameters:
        - name: phone
          in: query
          required: true
          schema:
            type: string
            pattern: '^7\d{10}$'
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Информация о продукте
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Ошибка определения абонента по номеру телефона
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Bearer: [ ]
  /products/stories:
    get:
      tags:
        - Products
      summary: Запрос на получение списка продуктов для отображения в сторис
      parameters:
        - name: phone
          in: query
          required: true
          schema:
            type: string
            pattern: '^7\d{10}$'
      responses:
        '200':
          description: Массив продуктов для отображения в сторис
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductStory'
        '404':
          description: Ошибка определения абонента по номеру телефона
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - Bearer: [ ]
  /products/connect:
    post:
      tags:
        - Products
      summary: Подключение подписки
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - productId
                - phone
              properties:
                productId:
                  type: integer
                phone:
                  type: string
                  pattern: '^7\d{10}$'
      responses:
        '200':
          description: Номер тикета
          content:
            application/json:
              schema:
                properties:
                  ticketId:
                    type: string
                type: object
        '400':
          $ref: '#/components/responses/ValidationErrorMessage'
      security:
        - Bearer: [ ]
  /products/disable:
    post:
      tags:
        - Products
      summary: Отключение подписки
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - productId
                - phone
              properties:
                productId:
                  type: integer
                phone:
                  type: string
                  pattern: '^7\d{10}$'
              type: object
      responses:
        '200':
          description: Номер тикета
          content:
            application/json:
              schema:
                properties:
                  ticketId:
                    type: string
                type: object
        '400':
          $ref: '#/components/responses/ValidationErrorMessage'
      security:
        - Bearer: [ ]
  /products/ticket-status:
    get:
      tags:
        - Products
      summary: Запрос на получение статуса выполнения тикета
      parameters:
        - name: ticketId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Описание статуса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionTicketStatus'
      security:
        - Bearer: [ ]
components:
  responses:
    ValidationErrorMessage:
      description: Ошибка валидации
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationErrorMessage'
    ServerError:
      description: Ошибка сервера
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerError'
    ForbiddenError:
      description: Ошибка доступа
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    UnauthorizedError:
      description: Ошибка авторизации
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
  schemas:
    Category:
      description: Class Category
      properties:
        name:
          description: Наименование категории
          type: string
      type: object
    Partner:
      description: Class Partner
      properties:
        name:
          description: Наименование партнера
          type: string
        logoPath:
          description: Endpoint для получения логотипа партнера
          type: string
        category:
          $ref: '#/components/schemas/Category'
      type: object
    Product:
      description: Class Product
      properties:
        id:
          description: Идентификатор продукта
          type: integer
        type:
          description: >
            Тип продукта:
              * `1` - Подписка
              * `2` - Бандл
          type: integer
          enum:
            - 1
            - 2
        name:
          description: Название продукта
          type: string
        description:
          description: Краткое описание продукта
          type: string
        extDescription:
          description: Полное описание продукта в формате html
          type: string
        price:
          description: Стоимость подписки
          type: string
        paymentPeriod:
          description: >
            Период списания:
              * `1` - Разовое списание
              * `2` - Ежедневное
              * `3` - Ежемесячное
          enum:
            - 1
            - 2
            - 3
          type: integer
        options:
          $ref: '#/components/schemas/Subscription'
        partner:
          $ref: '#/components/schemas/Partner'
        subscriptionStatus:
          $ref: '#/components/schemas/SubscriptionStatus'
      type: object
    ProductStory:
      description: Class ProductStory
      properties:
        id:
          description: Идентификатор продукта
          type: integer
        name:
          description: Название продукта
          type: string
        description:
          description: Краткое описание продукта
          type: string
      type: object
    Subscription:
      description: Class Subscription
      properties:
        trial:
          description: Описание триального периода
          properties:
            units:
              description: >
                Длительность:
                  * `1` - День
                  * `2` - Неделя
                  * `3` - Месяц
              enum:
                - 1
                - 2
                - 3
              type: integer
            count:
              description: Количество
              type: integer
          type: object
          nullable: true
      type: object
    SubscriptionStatus:
      description: Class SubscriptionStatus
      properties:
        status:
          description: >
            Статус подписки:
              * `1` - Подключение
              * `2` - Продление
              * `3` - Блокировка: недостаточно средств
              * `4` - Блокировка: подписка отменена
              * `5` - Отключение
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
          type: integer
        expireDate:
          description: Дата истечения подписки в формате ISO8601
          type: string
          example: '2021-07-16T14:07:05+03:00'
      type: object
    SubscriptionTicketStatus:
      description: Class SubscriptionTicketStatus
      properties:
        action:
          type: integer
          enum:
            - 1
            - 2
          description: >
            Тип тикета:
              * `1` - Подключение
              * `2` - Отключение
          required: true
        status:
          type: object
          properties:
            code:
              type: string
              enum:
                - in_progress
                - success
                - error
              required: true
            desc:
              type: string
              description: Описание для отображения на клиенте
          required: true
      type: object
    TokenData:
      description: Class TokenData
      properties:
        access_token:
          description: Авторизационный токен доступа
          type: string
        refresh_token:
          description: Рефреш токен
          type: string
        expires_in:
          description: Время жизни токена (в секундах)
          type: integer
      type: object
    ErrorMessage:
      description: Error
      properties:
        error:
          type: object
          properties:
            code:
              description: Код ошибки
              type: string
            desc:
              description: Описание ошибки
              type: string
      type: object
    UnauthorizedError:
      description: Unauthorized Error
      properties:
        error:
          type: object
          properties:
            code:
              description: Код ошибки
              type: integer
              example: 401
            desc:
              description: Описание ошибки
              type: string
              example: "Your request was made with invalid credentials."
    ForbiddenError:
      description: Forbidden Error
      properties:
        error:
          type: object
          properties:
            code:
              description: Код ошибки
              type: integer
              example: 403
            desc:
              description: Описание ошибки
              type: string
              example: "Вам не разрешено производить данное действие."
    ServerError:
      description: Server Error
      properties:
        error:
          type: object
          properties:
            code:
              description: Код ошибки
              type: integer
              example: 500
            desc:
              description: Описание ошибки
              type: string
    ValidationErrorMessage:
      description: Validation Error
      properties:
        error:
          type: object
          properties:
            code:
              description: Код ошибки
            desc:
              description: Массив ошибок по атрибутам
              type: array
              items:
                type: object
                properties:
                  field:
                    description: Атрибут валидации
                    type: string
                  error:
                    description: Описание ошибки
                    type: string
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
    Basic:
      type: http
      scheme: basic
tags:
  - name: Auth
    description: Аутентификация и авторизация
  - name: Products
    description: Продуктовые представления